<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salon.dao.MainDao">
	<resultMap type="main" id="mainMap">
		<result column="no" property="no"/>
		<result column="image_no" property="imageNo"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="favorite" property="favorite"/>
	</resultMap>
	
	<resultMap id="blogMap" type="blog">
  		<id property="bno" column="bno" />
  		<result property="mno" column="mno"/>
  		<result property="tag" column="tag"/>
  		<result property="content" column="content"/>
  		<collection property="blogImageList" ofType="blogImage">
  			<id property="bpno" column="bpno"/>
  			<result property="path" column="path"/>
  		</collection>
	</resultMap>
	
	<select id="mainList" resultMap="blogMap" parameterType="map">
	select t1.bno, t1.mno, t1.tag, t1.content, t2.bpno, t2.path 
      from blog t1 left outer join BLOG_PHO t2 on t1.bno=t2.bno
     order by t1.bno
     limit #{startIndex}, #{length};
	</select> 
	
	<!-- <select id="selectByNo" parameterType="map" resultType="int">
		select fav
		  from favorite
		 where bno = #{bno}
		   and mno = #{mno}
	</select> -->
	
	<!-- favorite -->
	
	<insert id="insertFav" parameterType="favorite">
			insert into favorite (mno, 
				<choose>
					<when test="from == 'blog'">bno</when>
					<when test="from == 'shop'">sano</when>
					<when test="from == 'designer'">mdno</when>
				</choose>
			) values (#{mno},
				<choose>
					<when test="from == 'blog'">#{bno}</when>
					<when test="from == 'shop'">#{sano}</when>
					<when test="from == 'designer'">#{mdno}</when>
				</choose>
			)
	</insert>
	
	<delete id="deleteFav" parameterType="favorite">
		delete from favorite
		 where mno = #{mno}
		   and <choose>
					<when test="from == 'blog'">bno</when>
					<when test="from == 'shop'">sano</when>
					<when test="from == 'designer'">mdno</when>
				</choose> 
				= 
				<choose>
					<when test="from == 'blog'">#{bno}</when>
					<when test="from == 'shop'">#{sano}</when>
					<when test="from == 'designer'">#{mdno}</when>
				</choose>
	</delete>
	  	
  	<select id="getBlogbyFav" parameterType="map" resultMap="blogMap">
  		select t1.bno, t1.mno, t1.tag, t1.content, t2.bno, t2.bpno, t2.path 
	      from blog t1 left outer join BLOG_PHO t2 on t1.bno=t2.bno
		 where t1.bno in (select bno
					     from favorite
					    where mno = #{mno})
	     order by t1.bno 
  		 limit #{startIndex}, #{length};
  	</select>
  	
  	
  	
  	
  	<select id="favBlogList" parameterType="int" resultType="favorite">
		select bno, sano, mdno
		  from favorite
		 where mno = #{mno}
	</select>
  	
  	<select id="search" parameterType="map" resultMap="blogMap">
		 select t1.bno, t1.mno, t1.tag, t1.content, t2.bno, t2.bpno, t2.path 
	      from blog t1 left outer join BLOG_PHO t2 on t1.bno=t2.bno
	      <where>
	      	t1.tag like
	      	   <foreach collection="resultArray" item="result" separator="and t1.tag like" >
					CONCAT('%', '${result}' , '%') 
				</foreach> 
	      </where>
	     order by t1.bno 
  		 limit #{startIndex}, #{length}; 	
  	</select>


  	
</mapper>






