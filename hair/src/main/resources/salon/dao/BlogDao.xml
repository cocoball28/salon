<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salon.dao.BlogDao">
	
	<resultMap id="blogMap" type="blog">
  		<id property="bno" column="bno" />
  		<result property="tag" column="tag"/>
  		<result property="content" column="content"/>
  		<collection property="blogImageList" ofType="blogImage">
  			<id property="bpno" column="bpno"/>
  			<result property="path" column="path"/>
  		</collection>
	</resultMap>

	
	
	<!-- 본문  -->
	<!-- 본문  전체 리스트 -->
	<select id="selectBlogList" resultMap="blogMap" parameterType="blog">
	select t1.bno, t1.tag, t1.content, t2.bno, t2.bpno, t2.path 
      from blog t1 left outer join BLOG_PHO t2 on t1.bno=t2.bno
     where t1.mno = #{mno}
     order by t1.bno;
	</select>

	
	<!-- 본문 작성 후 한개 보여주기 -->
	<select id="selectBlogByNo" resultMap="blogMap" parameterType="blog">
	select t1.bno, t1.tag, t1.content, t2.bno, t2.bpno, t2.path 
      from blog t1 left outer join BLOG_PHO t2 on t1.bno=t2.bno
	 where t1.bno = #{bno}
	</select>
	
	<!-- 본문 작성  -->
	<insert id="insert" parameterType="blog">
		insert into blog(mno, tag, content)
		values (#{mno}, #{tag}, #{content})
		<selectKey keyProperty="bno" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 본문 삭제  -->
	<delete id="deleteBlog" parameterType="blog">
		delete FROM blog
		where bno = #{bno}
	</delete>
	
	
	
	<!-- 파일 업로드  -->
	<insert id="insertImage" parameterType="blogImage">
		insert into BLOG_PHO(PATH, BNO)
		values (#{path}, #{bno})
	</insert>
 	
 	<select id="selectImage" parameterType="blog" resultType="blogImage">
		select path, bNo, bpno
		  from BLOG_PHO
		 where bno = #{bNo}
 	</select>
 	
 	
 
 
	<!-- 댓글 파트 -->
	<!-- 댓글 리스트 출력 -->
	 <select id="selectCommentList" parameterType="blogComment" resultType="blogComment">
	select cno, bno, content, reg_date as regDate, nick, photo_path as phtoPath, gender, status 
	  from BLOG_COMMENT join member
        on blog_comment.mno = member.mno 
	 where bno = #{bno}
	 order by cno;
	 </select>
	 
	 <!-- 댓글 입력 후 댓글 출력 -->
	 <select id="selectComment" parameterType="blogComment" resultType="blogComment">
	select cno, bno, content, reg_date as regDate, nick, photo_path as phtoPath, gender, status 
	  from BLOG_COMMENT join member
        on blog_comment.mno = member.mno 
	 where cno = #{cno}
	 </select>
	 
	 <!-- 댓글 입력-->
	<insert id="insertComment" parameterType="blogComment">
	  insert into BLOG_COMMENT(bno, content, mno) 
	  values (#{bno}, #{content}, #{mno})
	  	<selectKey keyProperty="cno" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 댓글 삭제  -->
	<delete id="deleteComment" parameterType="blogComment">
		delete FROM BLOG_COMMENT
		where cno = #{cno}
	</delete>
	
	
	<!-- 디자이너 정보 출력 -->
	<select id="selectDsnInfo" parameterType="blog" resultType="member">
	    select mno, email, pwd, name, nick, photo_path as photoPath, gender, status
		  from member
		 where mno = #{mno}
	</select>
	
	<!-- 글삭제시 글에 달린 모든 댓글 삭제 -->
	<delete id="deleteCommentByBlogNo" parameterType="blog">
	   delete FROM BLOG_COMMENT
		where bno = #{bno}
	</delete>

	<!-- 글삭제시 첨부이미지 삭제 -->
	<delete id="deleteImageByBlogNo" parameterType="blog">
	   delete FROM BLOG_PHO
		where bno = #{bno}
	</delete>
</mapper>